[DOCUMENT]
TITLE: SpecRelationParser Requirements
SPECIAL_FIELDS:
- NAME: ALLOCATION
  TYPE: String
- NAME: ASIL
  TYPE: String
- NAME: TARGET_VALUE
  TYPE: String
- NAME: ALLOCATION_TO_COMPONENT
  TYPE: String
- NAME: TYPE
  TYPE: String
- NAME: INITIAL_CONDITION
  TYPE: String
- NAME: TEST_SEQUENCE
  TYPE: String
- NAME: REFERENCE
  TYPE: String

[FREETEXT]
Defining the Requirements for the SpecRelationParser
[/FREETEXT]

[SECTION]
TITLE: Mapping technical requirements

[REQUIREMENT]
UID: HLR301
STATUS: Draft
SPECIAL_FIELDS:
  ALLOCATION: Software
  ASIL: none
REFS:
- TYPE: Parent
  VALUE: SR001
TITLE: The SpecRelationParser shall parse an Etree Element (SpecRelation) and return the data necessary for parsing of this type of SpecObjectRef.

[REQUIREMENT]
UID: LLR301
STATUS: Draft
SPECIAL_FIELDS:
  ALLOCATION_TO_COMPONENT: Software
  ASIL: none
  TARGET_VALUE: UID
REFS:
- TYPE: Parent
  VALUE: HLR301
TITLE: The SpecRelationParser shall parse an Etree Element (SpecRelation) and return the RelationMap.
COMMENT: >>>
no comment
<<<

[REQUIREMENT]
UID: LLR301-T001
STATUS: Draft
SPECIAL_FIELDS:
  TYPE: Software
  INITIAL_CONDITION: An Etree Element containing a SPEC-RELATION xml object
  TEST_SEQUENCE: The Element is parsed by the Parser and returns the Target and Source values. The returned attribute map is compared to the known value.
  TARGET_VALUE: known map from the xml object
REFS:
- TYPE: Parent
  VALUE: LLR301
- TYPE: File
  VALUE: ..\tests\unit\strictdoc\import\reqif
TITLE: Test that parsing a correct SPEC-RELATION returns the correct map.

[REQUIREMENT]
UID: LLR301-T002
STATUS: Draft
SPECIAL_FIELDS:
  TYPE: Software
  INITIAL_CONDITION: An Etree Element containing a SPEC-RELATION xml object with a malformed Attribute
  TEST_SEQUENCE: The Element, containing a malformed SpecRelation, is parsed by the Parser and returns an Exception. The returned Exception is verified
  TARGET_VALUE: ValueError("spec_relation_malformed")
REFS:
- TYPE: Parent
  VALUE: LLR301
- TYPE: File
  VALUE: ..\tests\unit\strictdoc\import\reqif
TITLE: Test that parsing a correct SPEC-RELATION with a malformed SpecRelation raises a ValueError("spec_relation_malformed")

[REQUIREMENT]
UID: LLR301-T003
STATUS: Draft
SPECIAL_FIELDS:
  TYPE: Software
  INITIAL_CONDITION: An Etree Element containing a SPEC-RELATION xml object without a type
  TEST_SEQUENCE: The Element, containing no SpecRelation, is parsed by the Parser and returns an Exception. The returned Exception is verified
  TARGET_VALUE: ValueError("spec_relation_missing")
REFS:
- TYPE: Parent
  VALUE: LLR301
- TYPE: File
  VALUE: ..\tests\unit\strictdoc\import\reqif
TITLE: Test that parsing a correct SPEC-RELATION without a type raises a ValueError("spec_relation_missing")

[/SECTION]
